package presentacion.vista;

import clientePatolli.Cliente;
import control.CJugador;
import control.CPartida;
import control.ControlBase;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;
import modelo.MJugador;
import modelo.MPartida;
import modelo.ModeloBase;

/**
 * Frame de inicio del juego.
 *
 * @author Equipo1
 */
public class FInicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public FInicio() {
        initComponents();
        /*
        Al ser un server el que debe de ejecutarse o levantarse primero, si este ya esta corriendo,
        y alguien quiere unirse o crear partida no podra realizar nada hasta que esta finalice.
        
        Atentamente Notas para el futuro.
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        entrar = new javax.swing.JButton();
        crear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inicio");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(610, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(610, 400));
        getContentPane().setLayout(null);

        titulo.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        titulo.setText("          Patiolli");
        getContentPane().add(titulo);
        titulo.setBounds(30, -10, 500, 70);

        entrar.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        entrar.setText("Entrar");
        entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarActionPerformed(evt);
            }
        });
        getContentPane().add(entrar);
        entrar.setBounds(20, 200, 150, 50);

        crear.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        crear.setText("Crear");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });
        getContentPane().add(crear);
        crear.setBounds(410, 210, 160, 50);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jPanel1);
        jPanel1.setBounds(300, 0, 310, 400);

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 300, 400);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
        this.mostrarPantallaCrear();
    }//GEN-LAST:event_crearActionPerformed
//Mostrar pantalla de creacion de partida

    public void mostrarPantallaCrear() {
        this.dispose();
        ModeloBase modeloPartida = new MPartida();
        ControlBase controlPartida = new CPartida();
                Cliente cliente=new Cliente();
        controlPartida.establecerModelo(modeloPartida);
        controlPartida.establecerCliente(cliente);
        FrameBase fCrearPartida = new FCrearPartida();
        modeloPartida.addObserver(fCrearPartida);
        fCrearPartida.establecerControl(controlPartida);
        java.awt.EventQueue.invokeLater(() -> {
            fCrearPartida.setVisible(true);
        });

    }


    private void entrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarActionPerformed
        this.mostrarPantallaUnirse();
    }//GEN-LAST:event_entrarActionPerformed

//
//    //Metodo que valida si una partida a sido establecida o creada.
//    //Con el fin de realizar una adecuada simulacion
//    public void recuperarPartidas() {
////        if (this.control.validarCreacion()) {
////            this.mostrarMensajeError("No hay partidas creadas por el momento");
////        } else {
////            java.awt.EventQueue.invokeLater(new Runnable() {
////                @Override
////                public void run() {
////                    new FUnirse().setVisible(true);
////                }
////            });
////        }
//
//    }
//Metodo que muestra mensaje de error. 
    public void mostrarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje);
    }

    //Metodo que muestra la pantalla de unirse.
    public void mostrarPantallaUnirse() {
        this.dispose();
        ModeloBase modeloJugador = new MJugador();
        ControlBase controlJugador = new CJugador();
        Cliente cliente=new Cliente();
        controlJugador.establecerModelo(modeloJugador);
        controlJugador.establecerCliente(cliente);
        FrameBase fUnirse = new FUnirse();
        fUnirse.establecerControl(controlJugador);
        modeloJugador.addObserver(fUnirse);
        java.awt.EventQueue.invokeLater(() -> {
            fUnirse.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton crear;
    private javax.swing.JButton entrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
